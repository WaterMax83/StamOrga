From f10a52599f8305f0254ebfe5232fd85675ec7d11 Mon Sep 17 00:00:00 2001
From: Markus Schneider <MarkusSchneiderH@gmx.de>
Date: Tue, 25 Apr 2017 09:01:21 +0200
Subject: [PATCH 2/3] add logging page for debug

---
 StamOrga/Android/main.cpp                   |  38 ++++++----
 StamOrga/Android/main.qml                   |   7 ++
 StamOrga/Android/pages/LogginPage.qml       |  49 +++++++++++++
 StamOrga/Android/pages/UserLogin.qml        |   1 +
 StamOrga/Android/pages/UserLoginForm.ui.qml | 105 ++++++----------------------
 StamOrga/Android/qml.qrc                    |   1 +
 StamOrga/Data/globaldata.h                  | 102 +++++++++++++++++++--------
 7 files changed, 177 insertions(+), 126 deletions(-)
 create mode 100644 StamOrga/Android/pages/LogginPage.qml

diff --git a/StamOrga/Android/main.cpp b/StamOrga/Android/main.cpp
index f2698bc..618a02a 100755
--- a/StamOrga/Android/main.cpp
+++ b/StamOrga/Android/main.cpp
@@ -16,37 +16,51 @@
 *    along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <QtCore/QDateTime>
+#include <QtCore/QMetaObject>
+#include <QtCore/QSettings>
 #include <QtGui/QGuiApplication>
 #include <QtQml/QQmlApplicationEngine>
 #include <QtQml/QQmlContext>
-#include <QtCore/QSettings>
-#include <QtCore/QMetaObject>
-#include <QtCore/QDateTime>
 
 
-#include "userinterface.h"
 #include "../../Common/General/globalfunctions.h"
 #include "../Data/globaldata.h"
 #include "../dataconnection.h"
+#include "userinterface.h"
+
+// global data class
+GlobalData globalUserData;
 
-int main(int argc, char *argv[])
+void stamOrgaMessageOutput(QtMsgType type, const QMessageLogContext& context, const QString& msg)
+{
+    Q_UNUSED(context);
+
+    QString newMessage = qFormatLogMessage(type, context, msg);
+    globalUserData.addNewLoggingMessage(newMessage);
+}
+
+
+int main(int argc, char* argv[])
 {
     QCoreApplication::setAttribute(Qt::AA_EnableHighDpiScaling);
     QGuiApplication app(argc, argv);
 
     // Set the global Message Pattern
     SetMessagePattern();
+#ifdef QT_DEBUG
+#ifdef Q_OS_ANDROID
+    qInstallMessageHandler(stamOrgaMessageOutput);
+#endif
+#endif
 
     // Register our component type with QML.
     qmlRegisterType<UserInterface>("com.watermax.demo", 1, 0, "UserInterface");
-//    qmlRegisterType<GamePlay*>("com.watermax.demo", 1, 0, "GamePlay*");
-    qRegisterMetaType<GamePlay *>("GamePlay*");
-    qRegisterMetaType<SeasonTicketItem *>("SeasonTicketItem*");
+    //    qmlRegisterType<GamePlay*>("com.watermax.demo", 1, 0, "GamePlay*");
+    qRegisterMetaType<GamePlay*>("GamePlay*");
+    qRegisterMetaType<SeasonTicketItem*>("SeasonTicketItem*");
     qRegisterMetaType<DataConRequest>("DataConRequest");
 
-    // global data class
-    GlobalData globalUserData;
-
     // engine to start qml display -> takes about half a second
     QQmlApplicationEngine engine;
     engine.rootContext()->setContextProperty("globalUserData", &globalUserData);
@@ -64,7 +78,7 @@ int main(int argc, char *argv[])
 
 #endif
 
-    QObject *pRootObject = engine.rootObjects().first();
+    QObject* pRootObject = engine.rootObjects().first();
     if (globalUserData.userName().size() == 0)
         QMetaObject::invokeMethod(pRootObject, "openUserLogin", Q_ARG(QVariant, true));
     else
diff --git a/StamOrga/Android/main.qml b/StamOrga/Android/main.qml
index 13f0ccd..f8de01e 100644
--- a/StamOrga/Android/main.qml
+++ b/StamOrga/Android/main.qml
@@ -142,6 +142,8 @@ ApplicationWindow {
                 Component.onCompleted: {
                     append({title: "Benutzer", element : viewUserLogin, imgsource : ""});
                     append({title: "Dauerkarten", element : viewSeasonTickets, imgsource : "images/refresh.png"})
+                    if (userInt.isDebuggingEnabled() && userInt.isDeviceMobile())
+                        append({title: "Logging", element : viewLoggingPage, imgsource : ""});
                 }
             }
 
@@ -185,6 +187,11 @@ ApplicationWindow {
         }
     }
 
+    Component {
+        id: viewLoggingPage
+        MyPages.LogginPage {}
+    }
+
     UserInterface {
         id: userInt
         globalData: globalUserData
diff --git a/StamOrga/Android/pages/LogginPage.qml b/StamOrga/Android/pages/LogginPage.qml
new file mode 100644
index 0000000..8d79e7a
--- /dev/null
+++ b/StamOrga/Android/pages/LogginPage.qml
@@ -0,0 +1,49 @@
+/*
+*	This file is part of StamOrga
+*   Copyright (C) 2017 Markus Schneider
+*
+*	This program is free software; you can redistribute it and/or modify
+*   it under the terms of the GNU General Public License as published by
+*   the Free Software Foundation; either version 3 of the License, or
+*   (at your option) any later version.
+*
+*	Foobar is distributed in the hope that it will be useful,
+*    but WITHOUT ANY WARRANTY; without even the implied warranty of
+*    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+*    GNU General Public License for more details.
+
+*    You should have received a copy of the GNU General Public License
+*    along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+import QtQuick 2.7
+import QtQuick.Controls 2.1
+import QtQuick.Layouts 1.0
+
+import com.watermax.demo 1.0
+
+Flickable {
+   id: flickableLogging
+   contentHeight: mainPaneLogging.height
+   Pane {
+       id: mainPaneLogging
+       width: parent.width
+
+       Text {
+           id: txtLogging
+           wrapMode: Text.WordWrap
+//           implicitWidth: mainPaneLogging.width
+           Layout.alignment: Qt.AlignHCenter | Qt.AlignVCenter
+           rightPadding: 5
+           visible: true
+       }
+
+   }
+
+   function pageOpenedUpdateView() {
+       txtLogging.text = globalUserData.getCurrentLogginList();
+   }
+
+
+   ScrollIndicator.vertical: ScrollIndicator { }
+}
diff --git a/StamOrga/Android/pages/UserLogin.qml b/StamOrga/Android/pages/UserLogin.qml
index 9aba0f6..f62484e 100644
--- a/StamOrga/Android/pages/UserLogin.qml
+++ b/StamOrga/Android/pages/UserLogin.qml
@@ -129,6 +129,7 @@ Flickable {
                 Layout.alignment: Qt.AlignHCenter | Qt.AlignVCenter
                 transformOrigin: Item.Center
                 onClicked: {
+                    console.log("Dies ist ein Test");
                     if (userIntUser.isDebuggingEnabled()) {
                         globalUserData.ipAddr = txtIPAddress.text
                     }
diff --git a/StamOrga/Android/pages/UserLoginForm.ui.qml b/StamOrga/Android/pages/UserLoginForm.ui.qml
index 826aaf0..5ab979d 100644
--- a/StamOrga/Android/pages/UserLoginForm.ui.qml
+++ b/StamOrga/Android/pages/UserLoginForm.ui.qml
@@ -17,97 +17,32 @@
 */
 
 import QtQuick 2.7
-import QtQuick.Controls 2.0
+import QtQuick.Controls 2.1
 import QtQuick.Layouts 1.0
-import QtQuick.Extras 1.4
-import QtQuick.Window 2.2
 
-import "../components" as MyComponents
+import com.watermax.demo 1.0
 
-Rectangle {
-    id: mainRectangle
-    property var m_gamePlayItem
+Flickable {
+   id: flickableLogging
+   width: 300
+   contentHeight: mainPaneLogging.height
+   Pane {
+       id: mainPaneLogging
+       width: parent.width
 
-    width: 200
-    height: childrenRect.height * 1.1
-    radius: 8
-    gradient: Gradient {
-        GradientStop {
-            position: 0
-            color: "#275d58"
-        }
+       Text {
+           id: txtLogging
+           text: "Hallo Welt, Dies ist ein Test \\n Wie l√§uft das mit Multiline"
+           wrapMode: Text.WrapAnywhere
+           //           implicitWidth: mainPaneLogging.width
+           Layout.alignment: Qt.AlignHCenter | Qt.AlignVCenter
+           rightPadding: 5
+           visible: true
+       }
 
-        GradientStop {
-            position: 0.51
-            color: "#85c4be"
-        }
-    }
-    border.color: "grey"
-    border.width: 2
-    ColumnLayout {
-        id: columnLayout
-        width: mainRectangle.width
-        spacing: 1
-        Label {
-            id: labelLine1
-            text: qsTr("Date")
-            leftPadding: 5
-            topPadding: 5
-            Layout.alignment: Qt.AlignLeft | Qt.AlignHCenter
-        }
+   }
 
-        Label {
-            id: labelLine2
-            text: qsTr("What")
-            font.letterSpacing: 2
-            fontSizeMode: Text.FixedSize
-            leftPadding: 5
-            Layout.alignment: Qt.AlignLeft | Qt.AlignHCenter
-        }
 
-        RowLayout {
-            id: layoutExplicitGame
-            anchors.right: parent.right
-            anchors.left: parent.left
-            Layout.preferredWidth: columnLayout.width
-            Layout.fillWidth: true
-            Label {
-                id: labelLineHome
-                width: 36
-                text: qsTr("Home")
-                leftPadding: 5
-                Layout.fillWidth: true
-                Layout.alignment: Qt.AlignLeft | Qt.AlignHCenter
-            }
 
-            Button {
-                id: button
-                text: qsTr("Button")
-            }
-
-            Label {
-                id: labelLineHyphen
-                width: contentWidth
-                text: qsTr(" - ")
-                Layout.alignment: Qt.AlignHCenter
-            }
-
-            Label {
-                id: labelLineAway
-                width: contentWidth
-                text: qsTr("Away")
-                Layout.fillWidth: true
-                Layout.alignment: Qt.AlignHCenter
-            }
-
-            Label {
-                id: labelLineScore
-                width: contentWidth
-                text: qsTr("0:0")
-                rightPadding: 20
-                Layout.alignment: Qt.AlignRight | Qt.AlignHCenter
-            }
-
-        }
-    }
+   ScrollIndicator.vertical: ScrollIndicator { }
 }
diff --git a/StamOrga/Android/qml.qrc b/StamOrga/Android/qml.qrc
index 009dc9c..322f904 100644
--- a/StamOrga/Android/qml.qrc
+++ b/StamOrga/Android/qml.qrc
@@ -26,5 +26,6 @@
         <file>components/VersionDialog.qml</file>
         <file>components/SeasonTicket.qml</file>
         <file>components/EditableTextDialog.qml</file>
+        <file>pages/LogginPage.qml</file>
     </qresource>
 </RCC>
diff --git a/StamOrga/Data/globaldata.h b/StamOrga/Data/globaldata.h
index dab9f4b..78d5392 100644
--- a/StamOrga/Data/globaldata.h
+++ b/StamOrga/Data/globaldata.h
@@ -19,10 +19,10 @@
 #ifndef GLOBALDATA_H
 #define GLOBALDATA_H
 
+#include <QtCore/QList>
+#include <QtCore/QMutex>
 #include <QtCore/QObject>
 #include <QtCore/QSettings>
-#include <QtCore/QMutex>
-#include <QtCore/QList>
 #include <QtNetwork/QHostInfo>
 
 #include "gameplay.h"
@@ -39,12 +39,16 @@ class GlobalData : public QObject
     Q_PROPERTY(bool bIsConnected READ bIsConnected WRITE setbIsConnected NOTIFY bIsConnectedChanged)
 
 public:
-    explicit GlobalData(QObject *parent = 0);
+    explicit GlobalData(QObject* parent = 0);
 
     void loadGlobalSettings();
 
-    QString userName() { QMutexLocker lock(&this->m_mutexUser); return this->m_userName; }
-    void setUserName(const QString &user)
+    QString userName()
+    {
+        QMutexLocker lock(&this->m_mutexUser);
+        return this->m_userName;
+    }
+    void setUserName(const QString& user)
     {
         if (this->m_userName != user) {
             {
@@ -55,8 +59,12 @@ public:
         }
     }
 
-    QString readableName() { QMutexLocker lock(&this->m_mutexUser); return this->m_readableName; }
-    void setReadableName(const QString &name)
+    QString readableName()
+    {
+        QMutexLocker lock(&this->m_mutexUser);
+        return this->m_readableName;
+    }
+    void setReadableName(const QString& name)
     {
         if (this->m_readableName != name) {
             {
@@ -67,8 +75,12 @@ public:
         }
     }
 
-    QString passWord() { QMutexLocker lock(&this->m_mutexUser); return this->m_passWord; }
-    void setPassWord(const QString &passw)
+    QString passWord()
+    {
+        QMutexLocker lock(&this->m_mutexUser);
+        return this->m_passWord;
+    }
+    void setPassWord(const QString& passw)
     {
         if (this->m_passWord != passw) {
             {
@@ -79,8 +91,12 @@ public:
         }
     }
 
-    QString ipAddr() { QMutexLocker lock(&this->m_mutexUser); return this->m_ipAddress; }
-    void setIpAddr(const QString &ip)
+    QString ipAddr()
+    {
+        QMutexLocker lock(&this->m_mutexUser);
+        return this->m_ipAddress;
+    }
+    void setIpAddr(const QString& ip)
     {
         if (this->m_ipAddress != ip) {
             {
@@ -91,7 +107,11 @@ public:
         }
     }
 
-    quint32 conMasterPort() { QMutexLocker lock(&this->m_mutexUser); return this->m_uMasterPort; }
+    quint32 conMasterPort()
+    {
+        QMutexLocker lock(&this->m_mutexUser);
+        return this->m_uMasterPort;
+    }
     void setConMasterPort(quint32 port)
     {
         if (this->m_uMasterPort != port) {
@@ -103,7 +123,11 @@ public:
         }
     }
 
-    quint32 conDataPort() { QMutexLocker lock(&this->m_mutexUser); return this->m_uDataPort; }
+    quint32 conDataPort()
+    {
+        QMutexLocker lock(&this->m_mutexUser);
+        return this->m_uDataPort;
+    }
     void setConDataPort(quint32 port)
     {
         QMutexLocker lock(&this->m_mutexUser);
@@ -112,7 +136,11 @@ public:
         }
     }
 
-    quint32 userIndex() { QMutexLocker lock(&this->m_mutexUser); return this->m_userIndex; }
+    quint32 userIndex()
+    {
+        QMutexLocker lock(&this->m_mutexUser);
+        return this->m_userIndex;
+    }
     void setUserIndex(quint32 userIndex)
     {
         QMutexLocker lock(&this->m_mutexUser);
@@ -133,29 +161,43 @@ public:
 
     void saveGlobalUserSettings();
 
+#ifdef QT_DEBUG
+    Q_INVOKABLE QString getCurrentLogginList()
+    {
+        return this->m_loggingString;
+    }
+    void addNewLoggingMessage(QString log)
+    {
+        this->m_loggingString.append(log);
+        this->m_loggingString.append("\n");
+    }
+
+#endif
+
+
     void saveActualGamesList();
 
     void startUpdateGamesPlay();
-    void addNewGamePlay(GamePlay *gPlay);
+    void addNewGamePlay(GamePlay* gPlay);
     Q_INVOKABLE quint32 getGamePlayLength()
     {
         QMutexLocker lock(&this->m_mutexGame);
         return this->m_lGamePlay.size();
     }
-    Q_INVOKABLE GamePlay *getGamePlay(int index);
+    Q_INVOKABLE GamePlay* getGamePlay(int index);
     Q_INVOKABLE QString getGamePlayLastUpdate();
 
 
     void saveCurrentSeasonTickets();
 
     void startUpdateSeasonTickets();
-    void addNewSeasonTicket(SeasonTicketItem *sTicket);
+    void addNewSeasonTicket(SeasonTicketItem* sTicket);
     Q_INVOKABLE quint32 getSeasonTicketLength()
     {
         QMutexLocker lock(&this->m_mutexTicket);
         return this->m_lSeasonTicket.size();
     }
-    Q_INVOKABLE SeasonTicketItem *getSeasonTicket(int index);
+    Q_INVOKABLE SeasonTicketItem* getSeasonTicket(int index);
     Q_INVOKABLE QString getSeasonTicketLastUpdate();
 
 signals:
@@ -169,7 +211,7 @@ signals:
 public slots:
 
 private slots:
-    void callBackLookUpHost(const QHostInfo &host);
+    void callBackLookUpHost(const QHostInfo& host);
 
 private:
     QString m_userName;
@@ -180,24 +222,26 @@ private:
     quint16 m_uDataPort;
     quint32 m_userIndex;
 
-    QMutex  m_mutexUser;
-    QMutex  m_mutexUserIni;
-    QMutex  m_mutexGame;
-    QMutex  m_mutexTicket;
+    QMutex m_mutexUser;
+    QMutex m_mutexUserIni;
+    QMutex m_mutexGame;
+    QMutex m_mutexTicket;
 
     bool m_bIsConnected;
 
+#ifdef QT_DEBUG
+    QString m_loggingString;
+#endif
 
-
-    QSettings *m_pMainUserSettings;
+    QSettings* m_pMainUserSettings;
 
     QList<GamePlay*> m_lGamePlay;
-    qint64          m_gpLastTimeStamp;
-    bool existGamePlay(GamePlay *gPlay);
+    qint64           m_gpLastTimeStamp;
+    bool existGamePlay(GamePlay* gPlay);
 
     QList<SeasonTicketItem*> m_lSeasonTicket;
-    qint64          m_stLastTimeStamp;
-    bool existSeasonTicket(SeasonTicketItem *sTicket);
+    qint64                   m_stLastTimeStamp;
+    bool existSeasonTicket(SeasonTicketItem* sTicket);
 };
 
 #endif // GLOBALDATA_H
-- 
2.11.0

